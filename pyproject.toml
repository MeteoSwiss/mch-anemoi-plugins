[project]
name = "mch-anemoi-plugins"
version = "0.1.0"
description = "Package providing custom sources and filters for Anemoi."
readme = "README.rst"
authors = [{ name = "MeteoSwiss" }]
requires-python = ">=3.11"
dependencies = [
    "anemoi-datasets",
    "anemoi-plugins",
    "anemoi-transform",
    "pyproj",
    "pandas",
    "xarray",
    "zarr",
    "geopandas",
    "dask",
    "rioxarray",
    "pyyaml",
    "omegaconf>=2.3.0,<3",
    "cf-units>=3.2.0,<4",
    "earthkit>=0.10.0",
    "eccodes>=2.38.3",
    "data-provider>=1.0",
    "meteodata-lab>=0.2.0",
]


[project.scripts]
mch-anemoi-plugins = "mch_anemoi_plugins:main"

[project.entry-points."anemoi.datasets.sources"]
cosmo1e = "mch_anemoi_plugins.transform.sources:COSMO_1E"
inca = "mch_anemoi_plugins.transform.sources:INCA"
iconCH1 = "mch_anemoi_plugins.transform.sources:ICON_CH1_EPS"
kendaCH1 = "mch_anemoi_plugins.transform.sources:KENDA_CH1"
station = "mch_anemoi_plugins.transform.sources:SURFACE"
radar = "mch_anemoi_plugins.transform.sources:RADAR"
satellite = "mch_anemoi_plugins.transform.sources:SATELLITE"
dem = "mch_anemoi_plugins.transform.sources:NASADEM"
geosatclim = "mch_anemoi_plugins.transform.sources:GEOSATCLIM"
opera = "mch_anemoi_plugins.transform.sources:OPERA"

[project.entry-points."anemoi.transform.filters"]
project = "mch_anemoi_plugins.transform.filters:Project"
interp2res = "mch_anemoi_plugins.transform.filters:Interp2Res"
interp2grid = "mch_anemoi_plugins.transform.filters:Interp2Grid"
uv2dirspeed = "mch_anemoi_plugins.transform.filters:UV2Dirspeed"
dirspeed2uv = "mch_anemoi_plugins.transform.filters:Dirspeed2UV"
q2dewpoint = "mch_anemoi_plugins.transform.filters:Q2Dewpoint"
destagger = "mch_anemoi_plugins.transform.filters:HorizontalDestagger"

[project.optional-dependencies]
gridefix = [
    "gridefix-process>=3.0.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.dependency-groups.dev]
dependencies = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "mypy>=1.6.1,<2",
    "pydata-sphinx-theme>=0.14.1,<0.15",
    "pylint>=3.0.2,<4",
    "pytest-cov>=4.1.0,<5",
    "sphinx>=7.2.6,<8",
    "sphinx-autoapi>=3.0.0,<4",
    "yapf>=0.40.2,<0.41",
]

[tool.uv.sources]
anemoi-plugins = { git = "https://github.com/ecmwf/anemoi-plugins.git" }
anemoi-datasets = { git = "https://github.com/ecmwf/anemoi-datasets.git"}
anemoi-transform = { git = "https://github.com/ecmwf/anemoi-transform.git" }
meteodata-lab = { git = "https://github.com/MeteoSwiss/meteodata-lab.git"}
data-provider = {git = "https://github.com/MeteoSwiss/data-provider.git"}

[[tool.uv.index]]
name = "pypi-mch"
url = "https://service.meteoswiss.ch/nexus/repository/python-all/simple"

[[tool.uv.index]]
name = "pypi-mch-publish"
url = "https://service.meteoswiss.ch/nexus/repository/python-mch/"

[tool.yapf]
based_on_style = "pep8"
column_limit = "120"

[tool.pylint.master]
disable = [
    'R0913', # too many arguments
    'R0917', # too many positional arguments
    'C0415', # import outside toplevel
    'C0414', # explicit reexport
    'C0114', # missing-module-docstring
    'C0115', # missing-class-docstring
    'C0116', # missing-function-docstring
    'W0511', # fix me or to-do comments are already covered by SonarQube
    'C0414', # useless-import-alias
]

[tool.pylint.format]
# Maximum number of lines in a module.
max-line-length = 120

[tool.pylint.design]
# Minimum number of public methods for a class (see R0903).
min-public-methods = 0

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.coverage.run]
omit = ["test/**", "doc/**"]
